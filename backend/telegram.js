require('dotenv').config();
const TelegramBot = require('node-telegram-bot-api');
const axios = require('axios');

const bot = new TelegramBot(process.env.TELEGRAM_BOT_TOKEN, { polling: true });

const ADMIN_CHAT_ID = String(process.env.TELEGRAM_CHAT_ID);
const BACKEND_URL = process.env.BACKEND_URL || 'https://shop-kw6q.onrender.com';
const ADMIN_SECRET = process.env.ADMIN_SECRET;

function isAdmin(msg) {
  return String(msg.chat?.id || msg.from?.id) === ADMIN_CHAT_ID;
}

function showAdminMenu(chatId) {
  bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', {
    reply_markup: {
      inline_keyboard: [
        [
          { text: '‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä', callback_data: 'add_prod' },
          { text: '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä', callback_data: 'edit_prod' },
          { text: 'üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä', callback_data: 'del_prod' }
        ]
      ]
    }
  });
}

bot.onText(/\/start/, (msg) => {
  if (!isAdmin(msg)) return bot.sendMessage(msg.chat.id, '‚õîÔ∏è –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞!');
  showAdminMenu(msg.chat.id);
});

bot.onText(/\/menu/, (msg) => {
  if (!isAdmin(msg)) return bot.sendMessage(msg.chat.id, '‚õîÔ∏è –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞!');
  showAdminMenu(msg.chat.id);
});

bot.on('callback_query', async (query) => {
  const chatId = query.message.chat.id;
  bot.answerCallbackQuery(query.id);

  if (!isAdmin({ chat: { id: chatId } })) return;
  if (query.data === 'add_prod') {
    bot.sendMessage(chatId, '–§–æ—Ä–º–∞—Ç:\n<–Ω–∞–∑–≤–∞–Ω–∏–µ> ; <—Ü–µ–Ω–∞> ; <products/—Ñ–∞–π–ª.jpg>\n\n–ù–∞–ø—Ä–∏–º–µ—Ä:\nSneakers ; 59.99 ; products/shoe.jpg');
    bot.once('message', async (msg) => {
      if (!isAdmin(msg)) return;
      const args = msg.text.split(';').map(s => s.trim());
      if (args.length < 3) {
        return bot.sendMessage(chatId, '‚ö†Ô∏è –§–æ—Ä–º–∞—Ç: <–Ω–∞–∑–≤–∞–Ω–∏–µ> ; <—Ü–µ–Ω–∞> ; <products/—Ñ–∞–π–ª.jpg>');
      }
      const [name, price, location] = args;
      try {
        const res = await axios.post(`${BACKEND_URL}/products/add`, { name, price, location });
        if (res.data.success) {
          bot.sendMessage(chatId, `‚úÖ –¢–æ–≤–∞—Ä "${name}" —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!`);
        } else {
          bot.sendMessage(chatId, `‚ö†Ô∏è –û—à–∏–±–∫–∞: ${res.data.error || '–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä.'}`);
        }
      } catch (err) {
        bot.sendMessage(chatId, `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞:\n${err.response?.data?.error || err.message}`);
      }
    });
    return;
  }
  if (query.data === 'edit_prod') {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã
    try {
      const { data: items } = await axios.get(`${BACKEND_URL}/products`);
      if (!items.length) return bot.sendMessage(chatId, "–ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.");
      // –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å –∫–Ω–æ–ø–∫–∞–º–∏
      const keyboard = items.map(i => ([{
        text: `${i.name} ($${i.price})`,
        callback_data: `edit_${i.id}`
      }]));
      bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', {
        reply_markup: { inline_keyboard: keyboard }
      });
    } catch (err) {
      bot.sendMessage(chatId, "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤: " + (err.message || ""));
    }
    return;
  }

  if (query.data === 'del_prod') {
    try {
      const { data: items } = await axios.get(`${BACKEND_URL}/products`);
      if (!items.length) return bot.sendMessage(chatId, "–ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.");
      const keyboard = items.map(i => ([{
        text: `${i.name} ($${i.price})`,
        callback_data: `del_${i.id}`
      }]));
      bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:', {
        reply_markup: { inline_keyboard: keyboard }
      });
    } catch (err) {
      bot.sendMessage(chatId, "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤: " + (err.message || ""));
    }
    return;
  }

  if (query.data.startsWith('del_')) {
    const id = query.data.replace('del_', '');
    try {
      await axios.delete(`${BACKEND_URL}/products/${id}`, {
        headers: { 'x-admin-secret': ADMIN_SECRET }
      });
      bot.sendMessage(chatId, '‚úÖ –¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω!');
    } catch (err) {
      bot.sendMessage(chatId, `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏: ${err.response?.data?.error || err.message}`);
    }
    return;
  }

  if (query.data.startsWith('edit_')) {
    const id = query.data.replace('edit_', '');
    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n<–Ω–∞–∑–≤–∞–Ω–∏–µ> ; <—Ü–µ–Ω–∞> ; <products/—Ñ–∞–π–ª.jpg>');
    bot.once('message', async (msg) => {
      if (!isAdmin(msg)) return;
      const args = msg.text.split(';').map(s => s.trim());
      if (args.length < 3) {
        return bot.sendMessage(chatId, '‚ö†Ô∏è –§–æ—Ä–º–∞—Ç: <–Ω–∞–∑–≤–∞–Ω–∏–µ> ; <—Ü–µ–Ω–∞> ; <products/—Ñ–∞–π–ª.jpg>');
      }
      const [name, price, location] = args;
      try {
        await axios.put(`${BACKEND_URL}/products/${id}`, { name, price, location }, {
          headers: { 'x-admin-secret': ADMIN_SECRET }
        });
        bot.sendMessage(chatId, '‚úÖ –¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω!');
      } catch (err) {
        bot.sendMessage(chatId, `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏: ${err.response?.data?.error || err.message}`);
      }
    });
    return;
  }
});
async function notifyAdminOrder({ email, user = {}, items, total, orderId, cancelled = false }) {
  const info = `
${cancelled ? '‚ùå –û–¢–ú–ï–ù–ê –∑–∞–∫–∞–∑–∞!' : 'üõí –ù–æ–≤—ã–π –∑–∞–∫–∞–∑!'} ${orderId ? `‚Ññ${orderId}` : ""}
üë§ Name: ${user.name || "‚Äî"}
üìß Email: ${email}
‚òéÔ∏è Contact: ${user.contact || "‚Äî"}
üèôÔ∏è City: ${user.city || "‚Äî"}
üè† Address: ${user.address || "‚Äî"}

${items.map(i => `‚Ä¢ ${i.name} ‚Äî $${i.price}`).join('\n')}
üíµ Result: $${total}
  `.trim();

  await bot.sendMessage(process.env.TELEGRAM_CHAT_ID, info);
}

module.exports = { notifyAdminOrder };
